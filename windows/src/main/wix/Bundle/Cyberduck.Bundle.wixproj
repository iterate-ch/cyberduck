<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="EnsureWixToolsetInstalled" TreatAsLocalProperty="SignOutput" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)'))" />
  <PropertyGroup>
    <ProductVersion>3.11</ProductVersion>
    <ProjectGuid>65ab4ce3-5af4-411a-928c-7ffd250c6d85</ProjectGuid>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputName>Cyberduck-Installer-$(Version)</OutputName>
    <OutputType>Package</OutputType>
    <InstallerPlatform>x64</InstallerPlatform>
    <DefineConstants>
      CyberduckDir=$(CyberduckDir);
      ProfilesDir=$(CyberduckDir)profiles\default\;
      LicenseFile=$(CyberduckDir)i18n/src/main/resources/en.lproj/License.txt;
      IkvmRuntimeDir=$(TargetBuildDir)\ikvm;
      $(DefineConstants)
    </DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants>Debug;$(DefineConstants)</DefineConstants>
    <SignOutput Condition=" '$(SignOutput)' == '' ">false</SignOutput>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <SignOutput Condition=" '$(SignOutput)' == '' ">true</SignOutput>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Cyberduck.wxs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\csharp\Cyberduck.csproj">
      <Name>cyberduck</Name>
      <Project>{04AFCFBB-97D5-44EA-B087-F0CFAEB51E30}</Project>
      <Private>True</Private>
      <DoNotHarvest>True</DoNotHarvest>
      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>
      <RefTargetDir>INSTALLFOLDER</RefTargetDir>
    </ProjectReference>
    <ProjectReference Include="..\WindowsVersionCustomAction\WindowsVersionCustomAction.vcxproj">
      <Name>WindowsVersionCustomAction</Name>
      <Project>{fba5efe2-362b-4bad-a748-3248f79468ac}</Project>
      <Private>True</Private>
      <DoNotHarvest>True</DoNotHarvest>
      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>
      <RefTargetDir>INSTALLFOLDER</RefTargetDir>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <WixExtension Include="WixNetFxExtension">
      <HintPath>$(WixExtDir)\WixNetFxExtension.dll</HintPath>
      <Name>WixNetFxExtension</Name>
    </WixExtension>
    <WixExtension Include="WixUtilExtension">
      <HintPath>$(WixExtDir)\WixUtilExtension.dll</HintPath>
      <Name>WixUtilExtension</Name>
    </WixExtension>
  </ItemGroup>

  <ItemGroup>
    <HarvestDirectory Include="$(CyberduckDir)profiles\default" SuppressRootDirectory="true" SuppressCom="true" SuppressRegistry="true">
      <Link>Profiles</Link>
      <DirectoryRefId>PROFILES</DirectoryRefId>
      <ComponentGroupName>ProfileComponents</ComponentGroupName>
      <PreprocessorVariable>var.ProfilesDir</PreprocessorVariable>
    </HarvestDirectory>
    <HarvestDirectory Include="$(TargetBuildDir)ikvm" SuppressCom="true" SuppressRegistry="true">
      <Link>ikvm</Link>
      <DirectoryRefId>INSTALLLOCATION</DirectoryRefId>
      <ComponentGroupName>IkvmRuntime</ComponentGroupName>
      <PreprocessorVariable>var.IkvmRuntimeDir</PreprocessorVariable>
    </HarvestDirectory>
  </ItemGroup>

  <Import Project="$(WixTargetsPath)" Condition=" '$(WixTargetsPath)' != '' " />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets" Condition=" '$(WixTargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets') " />
  <Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixTargetsImported)' != 'true' ">
    <Error Text="The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/" />
  </Target>

  <Target Name="UsesFrameworkSdk">
    <GetFrameworkSdkPath>
      <Output TaskParameter="Path" PropertyName="FrameworkSdkPath" />
    </GetFrameworkSdkPath>
    <PropertyGroup>
      <WinSDK>$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\v8.0@InstallationFolder)</WinSDK>
      <WinSDK Condition="('@(WinSDK)'=='')">$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots@KitsRoot10)</WinSDK>
      <Win10SDKBinPath>$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0@InstallationFolder)bin\</Win10SDKBinPath>
      <Win10SDKVersion>$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0@ProductVersion).0\</Win10SDKVersion>
      <Win10SDKVerBinPath>$(Win10SDKBinPath)$(Win10SDKVersion)</Win10SDKVerBinPath>
    </PropertyGroup>
  </Target>
  <Target Name="UsesSignTool" DependsOnTargets="UsesFrameworkSdk">
    <PropertyGroup>
      <SignToolPath Condition="('@(SignToolPath)'=='') and Exists('$(FrameworkSdkPath)bin\signtool.exe')">$(FrameworkSdkPath)bin\signtool.exe</SignToolPath>
      <SignToolPath Condition="('@(SignToolPath)'=='') and Exists('$(WinSDK)\bin\x86\signtool.exe')">$(WinSDK)\bin\x86\signtool.exe</SignToolPath>
      <SignToolPath Condition="('@(SignToolPath)'=='') and Exists('$(Win10SDKVerBinPath)x86\signtool.exe')">$(Win10SDKVerBinPath)x86\signtool.exe</SignToolPath>
    </PropertyGroup>
  </Target>
  <Target Name="SignMsi" DependsOnTargets="UsesSignTool">
    <Exec
        Command="&quot;$(SignToolPath)&quot; sign /d &quot;Cyberduck&quot; /fd sha256 /tr http://timestamp.entrust.net/TSS/RFC3161sha2TS /td sha256 /a /sm /n &quot;iterate GmbH&quot; &quot;%(SignMsi.FullPath)&quot;"/>
  </Target>
  <!--
	To modify your build process, add your task inside one of the targets below and uncomment it.
	Other similar extension points exist, see Wix.targets.
  -->
  <Target Name="SignDLLs" Condition=" '$(SignOutput)' == 'true' " DependsOnTargets="UsesSignTool" AfterTargets="Compile" BeforeTargets="Link">
    <ItemGroup>
      <Assemblies Include="$(TargetBuildDir)*.dll" />
      <Assemblies Include="$(TargetBuildDir)*.exe" />
      <Assemblies Remove="$(TargetBuildDir)netstandard.dll" />
      <Assemblies Remove="$(TargetBuildDir)System*.dll" />
    </ItemGroup>

    <Exec
        Command="&quot;$(SignToolPath)&quot; sign /d &quot;Cyberduck&quot; /fd sha256 /tr http://timestamp.entrust.net/TSS/RFC3161sha2TS /td sha256 /a /sm /n &quot;iterate GmbH&quot; &quot;%(Assemblies.Identity)&quot;"/>
  </Target>
</Project>
